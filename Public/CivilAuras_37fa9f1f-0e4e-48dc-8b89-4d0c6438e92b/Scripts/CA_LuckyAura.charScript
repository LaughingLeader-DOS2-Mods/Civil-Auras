#INCLUDE CA_AuraConfig

INIT
	CHARACTER:__Me
	INT:%LuckAuronOn = 0
	FIXEDSTRING:%LuckTimerName = "Luck_DelayTimer"
	SKILL:%LuckShoutName = "Shout_CA_LuckyToggle"
	
	STRING:%Event_Luck_SetHost = "Event_CA_Luck_SetHost"
	STRING:%Event_Luck_GetHost = "Event_CA_Luck_GetHost"
	STRING:%Event_Luck_ClearHost = "Event_CA_Luck_ClearHost"
	STRING:%Event_Luck_OnGetHost = "Event_CA_Luck_OnGetHostSet"
	STRING:%Event_Luck_CheckBaseHost = "Event_CA_Luck_CheckBaseHost"
	STRING:%Event_Luck_SetStatBonus = "Event_CA_Luck_SetStatBonus"
	STRING:%Event_Luck_GetStatBonus = "Event_CA_Luck_GetStatBonus"
	STRING:%Event_Luck_ApplyStatBonus = "Event_CA_Luck_Local_ApplyStatBonus"
	
	INT:%LuckStatBase = 0
	INT:%LuckStatBonus = 0
	STRING:%LuckAuraName = "Luck"
	STRING:%LuckStatName = "Luck"
	
	CHARACTER:%Debug_LuckAuraHost
	
USING CA_AuraConfig

EVENTS

EVENT SetupLuckVars
ON
	OnInit()
	OnLoaded(_,_,_,_)
	OnActivate()
ACTIONS
	//Set(%LuckStatBase, 0)
	//Set(%LuckStatBonus, 0)
	Set(%LuckAuraName, "Luck")
	Set(%LuckStatName, "Luck")
	Set(%LuckTimerName, "Luck_DelayTimer")
	Set(%LuckShoutName, "Shout_CA_LuckyToggle")
IF "!c1"
	CharacterHasStatus(__Me, CA_LUCKY)
THEN
	CharacterRemoveStatus(__Me, CA_LUCKY)
ENDIF

EVENT ToggleLuckAura
ON
	OnSkillCast(__Me, %LuckShoutName)
ACTIONS
IF "c1"
	IsEqual(%LuckAuronOn, 0)
THEN
	CharacterApplyStatus(__Me, CA_LUCKY_AURA, -1)
	Set(%LuckAuronOn, 1)
	Set(%LuckAuraName, "Luck")
	CharacterItemEvent(__Me, null, %Event_Luck_SetHost)
	Set(%LuckStatName, "Luck")
	//CharacterItemEvent(__Me, null, %Event_Luck_CheckBaseHost)
	//CharacterItemEvent(__Me, null, %Event_Luck_GetHost)
	//CharacterPlayEffect(__Me, "RS3_FX_GP_ScriptedEvent_Lucky_01", "Dummy_Root")
	PlaySound(__Me, "Item_Coin_Big_Drop")
ELSE
	CharacterRemoveStatus(__Me, CA_LUCKY_AURA)
	CharacterItemEvent(__Me, null, %Event_Luck_ClearHost)
	Set(%LuckAuronOn, 0)
	PlaySound(__Me, "Item_Coin_Big_Pickup")
ENDIF

EVENT AutoLuckAuraOff
ON
	OnEnteredCombat(__Me, _)
ACTIONS
IF "c1"
	CharacterHasStatus(__Me, CA_LUCKY_AURA)
THEN
	CharacterRemoveStatus(__Me, CA_LUCKY_AURA)
	CharacterItemEvent(__Me, null, %Event_Luck_ClearHost)
	//Set(%LuckAuronOn, 0)
ENDIF
	
EVENT AutoLuckAuraOn
ON
	OnLeftCombat(__Me, _)
ACTIONS
IF "c1"
	IsEqual(%LuckAuronOn, 1)
THEN
	StatusText(__Me, "Lucky Aura auto-enabled.")
	CharacterApplyStatus(__Me, CA_LUCKY_AURA, -1)
	CharacterItemEvent(__Me, null, %Event_Luck_SetHost)
	CharacterPlayEffect(__Me, "RS3_FX_GP_ScriptedEvent_Lucky_01", "Dummy_Root")
ENDIF
	
EVENT OnLuckyApplied
ON
	OnCharacterStatusApplied(__Me, CA_LUCKY)
ACTIONS
	Set(%LuckAuraName, "Luck")
	Set(%LuckStatName, "Luck")
	CharacterItemEvent(__Me, null, %Event_Luck_SetStatBonus)

EVENT OnLuckyRemoved
ON
	OnCharacterStatusRemoved(__Me, CA_LUCKY)
ACTIONS
	CharacterRemoveStatus(__Me, CA_LUCK01)
	CharacterRemoveStatus(__Me, CA_LUCK02)
	CharacterRemoveStatus(__Me, CA_LUCK03)
	CharacterRemoveStatus(__Me, CA_LUCK04)
	CharacterRemoveStatus(__Me, CA_LUCK05)
	CharacterRemoveStatus(__Me, CA_LUCK06)
	CharacterRemoveStatus(__Me, CA_LUCK07)
	CharacterRemoveStatus(__Me, CA_LUCK08)
	CharacterRemoveStatus(__Me, CA_LUCK09)
	CharacterRemoveStatus(__Me, CA_LUCK10)

EVENT OnGetLuckBonus
VARS
	STRING:_MessageIn
	FIXEDSTRING:_MessageOut
ON	
	OnCharacterItemEvent(__Me, _, %Event_Luck_GetStatBonus)
ACTIONS
	//Print(_MessageIn, "Luck Bonus: [1]", %LuckBonus)
	//Cast(_MessageOut, _MessageIn)
	//DisplayCombatInfoText(__Me, _MessageOut, 2)
	//Using a timer here for safety. 
	//(Crashes can occur when overlapping statuses overwrite each other multiple times in a single frame).
	StartTimer(%LuckTimerName, 0.15, 1)

EVENT LuckTimerFire
ON
	OnTimer(%LuckTimerName)
ACTIONS
	CharacterEvent(__Me, %Event_Luck_ApplyStatBonus)
	StopTimer(%LuckTimerName)

EVENT SetLuckStatus
VARS
	INT:_FinalBonus
	STRING:_MessageIn
	FIXEDSTRING:_MessageOut
ON
	OnCharacterEvent(__Me, %Event_Luck_ApplyStatBonus)
ACTIONS
IF "!c1"
	CharacterHasStatus(__Me, CA_LUCKY_AURA)
THEN
	Set(_FinalBonus, %LuckStatBonus)
	Subtract(_FinalBonus, %LuckStatBase)
	IF "c1"
		IsGreaterThen(_FinalBonus, 0)
	THEN
		IF "c1"
			IsEqual(_FinalBonus, 1)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK01, -1, 1)
		ELIF "c1"
			IsEqual(_FinalBonus, 2)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK02, -1, 1)
		ELIF "c1"
			IsEqual(_FinalBonus, 3)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK03, -1, 1)
		ELIF "c1"
			IsEqual(_FinalBonus, 4)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK04, -1, 1)
		ELIF "c1"
			IsEqual(_FinalBonus, 5)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK05, -1, 1)
		ELIF "c1"
			IsEqual(_FinalBonus, 6)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK06, -1, 1)
		ELIF "c1"
			IsEqual(_FinalBonus, 7)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK07, -1, 1)	
		ELIF "c1"
			IsEqual(_FinalBonus, 8)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK08, -1, 1)	
		ELIF "c1"
			IsEqual(_FinalBonus, 9)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK09, -1, 1)	
		ELIF "c1"
			IsEqual(_FinalBonus, 10)
		THEN
			CharacterApplyStatus(__Me, CA_LUCK10, -1, 1)
		ENDIF
	ELSE
		Print(_MessageIn, "Aura host's Luck is too low ([1])", _FinalBonus)
		Cast(_MessageOut, _MessageIn)
		StatusText(__Me, _MessageOut)
	ENDIF
	
ENDIF

	
EVENT CheckLuckHost
VARS
	STRING:_MessageIn
	FIXEDSTRING:_MessageOut
ON
	OnCharacterItemEvent(__Me, _, %Event_Luck_OnGetHost)
ACTIONS
	Print(_MessageIn, "Lucky Aura Host: [1]", %Debug_LuckAuraHost)
	Cast(_MessageOut, _MessageIn)
	DisplayCombatInfoText(__Me, _MessageOut, 2)

EVENT CheckLuckBonusHost
VARS
	STRING:_MessageIn
	FIXEDSTRING:_MessageOut
ON
	OnCharacterItemEvent(__Me, _, "Event_CA_SetLuckBonusHost")
ACTIONS
	Print(_MessageIn, "Host Luck: [1]", %LuckStatBonus)
	Cast(_MessageOut, _MessageIn)
	DisplayCombatInfoText(__Me, _MessageOut, 2)
