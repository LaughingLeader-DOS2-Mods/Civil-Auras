Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_CA_BarterBonus((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000, 0);
//DB_CA_Barter_HighestBarter(_HighestPlayer, _HighestBarter)

DB_CA_BarterParty_Message(0, "Your party's reputation proceeds you. Enjoy a discount.");
DB_CA_BarterParty_Message(1, "Hello. I know of your party. Discounts for all.");
DB_CA_BarterParty_Message(2, "Welcome. Discounts for all.");
DB_CA_BarterParty_Message(3, "Looking for a discount?");
DB_CA_BarterParty_Message(4, "I have just the discount for you.");
DB_CA_BarterParty_Message(5, "Welcome. Haggle away.");
//DB_CA_Barter_LastMessage(_Message)

//DB_CA_Settings_Barter_Blacklist(_Player)
//"Event_CA_Bartering_TradeOpened_MP"
//"Event_CA_Bartering_TradeOpened_SP"
KBSECTION
//REGION QUERIES_PROCS
PROC
CA_Barter_CheckHighestBarter((CHARACTERGUID)_Player)
AND
NOT DB_CA_Barter_HighestBarter(_,_)
AND
CharacterGetAbility(_Player, "Barter", _BarterVal)
AND
_BarterVal > 0
THEN
DB_CA_Barter_HighestBarter(_Player, _BarterVal);

PROC
CA_Barter_CheckHighestBarter((CHARACTERGUID)_Player)
AND
DB_CA_Barter_HighestBarter(_PreviousPlayer, _HighestBarter)
AND
CharacterGetAbility(_Player, "Barter", _BarterVal)
AND
_BarterVal > 0
AND
_BarterVal > _HighestBarter
THEN
SysClear("DB_CA_Barter_HighestBarter", 2);
DB_CA_Barter_HighestBarter(_Player, _BarterVal);

QRY
CA_Barter_SetHighestBarter()
AND
DB_IsPlayer(_Player)
THEN
CA_Barter_CheckHighestBarter(_Player);

QRY
CA_GetBarterBonus((CHARACTERGUID)_Target, (INTEGER)_TargetVal)
AND
DB_CA_HighestBarter(_HighestBarter)
AND
_HighestBarter > _TargetVal
AND 
IntegerSubtract(_HighestBarter, _TargetVal, _FinalVal)
THEN
DB_CA_BarterBonus(_Target, _FinalVal);

PROC
CA_ClearBonuses((CHARACTERGUID)_Target)
AND
DB_CA_BarterBonus(_Target, _Val)
THEN
NOT DB_CA_BarterBonus(_Target, _Val);

PROC
CA_ResetHighestBarter()
THEN
SysClear("DB_CA_Barter_HighestBarter", 2);

QRY
CA_QRY_ResetHighestBarter()
THEN
SysClear("DB_CA_Barter_HighestBarter", 2);

QRY
CA_Barter_UserMatch((CHARACTERGUID)_Player, (CHARACTERGUID)_Character)
AND
CharacterGetReservedUserID(_Player,_PlayerID)
AND
CharacterGetReservedUserID(_Character, _CharID)
AND
_CharID == _PlayerID
THEN
DB_NOOP(1);

//END_REGION

//REGION HIGHEST_AUTO_RESET

//For fixing existing saves
IF
SavegameLoaded(_,_,_,_)
AND
NOT DB_CA_HighestBarter(0)
THEN
CA_ResetHighestBarter();
DB_CA_HighestBarter(0);

IF
RegionStarted(_Region)
AND
NOT DB_CA_HighestBarter(0)
THEN
CA_ResetHighestBarter();
DB_CA_HighestBarter(0);

//END_REGION

//REGION MULTIPLAYER
IF
RequestTrade((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
AND
UserGetFlag(_Player, "CA_BARTER_BLACKLIST", 0)
AND
DB_UserCounter(_Users)
AND
_Users > 1
THEN
SetStoryEvent(_Player, "Event_CA_Bartering_TradeOpened_MP");

IF
ObjectFlagSet("StartTrade",(CHARACTERGUID)_Player, _Instance)
AND
UserGetFlag(_Player, "CA_BARTER_BLACKLIST", 0)
AND
DB_UserCounter(_Users)
AND
_Users > 1
THEN
SetStoryEvent(_Player, "Event_CA_Bartering_TradeOpened_MP");

IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_Bartering_TradeOpened_MP")
AND
DB_UserCounter(_Users)
AND
_Users > 1
AND
CA_Barter_SetHighestBarter()
AND
DB_CA_Barter_HighestBarter(_HighestPlayer, _HighestBarter)
AND
DB_IsPlayer(_UserCharacter)
AND
CA_Barter_UserMatch(_Player, _UserCharacter)
THEN
CA_Aura_ApplyAuraBonus(_HighestPlayer, _UserCharacter, "Barter");

IF
TradeEnds((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
AND
DB_UserCounter(_Users)
AND
_Users > 1
AND
DB_IsPlayer(_UserCharacter)
AND
CA_Barter_UserMatch(_Player, _UserCharacter)
THEN
SetStoryEvent(_UserCharacter, "Event_CA_Bartering_TradeEnded");

//END_REGION

//REGION SINGLEPLAYER
IF
RequestTrade((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
AND
UserGetFlag(_Player, "CA_BARTER_BLACKLIST", 0)
AND
DB_UserCounter(_Users)
AND
_Users <= 1
THEN
SetStoryEvent(_Player, "Event_CA_Bartering_TradeOpened_SP");

IF
ObjectFlagSet("StartTrade",(CHARACTERGUID)_Player, _Instance)
AND
UserGetFlag(_Player, "CA_BARTER_BLACKLIST", 0)
AND
DB_UserCounter(_Users)
AND
_Users <= 1
THEN
SetStoryEvent(_Player, "Event_CA_Bartering_TradeOpened_SP");

IF
StoryEvent((CHARACTERGUID)_SoloPlayer, "Event_CA_Bartering_TradeOpened_SP")
AND
CA_Barter_SetHighestBarter()
AND
DB_CA_Barter_HighestBarter(_HighestPlayer, _HighestBarter)
AND
DB_IsPlayer(_Player) // Apply to all player characters
AND
CA_Barter_UserMatch(_SoloPlayer, _Player)
THEN
CA_Aura_ApplyAuraBonus(_HighestPlayer, _Player, "Barter");

IF
TradeEnds((CHARACTERGUID)_SoloPlayer, (CHARACTERGUID)_Trader)
AND
DB_UserCounter(_Users)
AND
_Users <= 1
AND
DB_IsPlayer(_Player)
THEN
SetStoryEvent(_Player, "Event_CA_Bartering_TradeEnded");
//END_REGION

//REGION RESET
IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_Bartering_TradeEnded")
THEN
CA_Aura_RemoveAuraBonus(_Player, "Barter");

//END_REGION

//REGION BARTER_BONUS_TRADER_MESSAGES
/*
//Only displays if the character isn't solo
IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_Bartering_TradeOpened_MP")
//RequestTrade((CHARACTERGUID)_Player, (CHARACTERGUID)_Trader)
//DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
UserGetFlag(_Player, "CA_BARTER_BLACKLIST", 0)
AND
DB_CA_Settings_Barter_Messages(_Player, 1, _MaxRan, _NumToPass)
AND
CA_Barter_SetHighestBarter()
AND
DB_CA_HighestBarter(_Barter)
AND
_Barter > 2
AND
Random(_MaxRan, _Ran)
AND
_Ran >= _NumToPass
AND
Random(6, _MessageIndex)
AND
DB_CA_BarterParty_Message(_MessageIndex, _Message)
AND
NOT DB_CA_Barter_LastMessage(_Message)
THEN
DisplayText(_Trader, _Message);
NOT DB_CA_Barter_LastMessage(_Message);
DB_CA_Barter_LastMessage(_Message);
*/

//END_REGION

//REGION LEGACY_REMOVAL
PROC
CA_Legacy_RemoveOldAuras((CHARACTERGUID)_Player)
AND
DB_CA_BarterBonus(_Player, _Val)
THEN
CA_Legacy_RemoveOldBonus(_Player, "Barter", _Val);
NOT DB_CA_BarterBonus(_Player, _Val);
//END_REGION

//REGION DATABASE_REFRESH
PROC
CA_Barter_ResetDatabases()
AND
DB_CA_BarterParty_Message(_Int, _Val)
THEN
NOT DB_CA_BarterParty_Message(_Int, _Val);

PROC
CA_Barter_ResetDatabases()
AND
DB_CA_HighestBarter(_Val)
THEN
NOT DB_CA_HighestBarter(_Val);

IF
StoryEvent(_Object, "CA_Refresh")
THEN
CA_Barter_ResetDatabases();
DB_CA_BarterParty_Message(0, "Your party's reputation proceeds you. Enjoy a discount.");
DB_CA_BarterParty_Message(1, "Hello. I know of your party. Discounts for all.");
DB_CA_BarterParty_Message(2, "Welcome. Discounts for all.");
DB_CA_BarterParty_Message(3, "Looking for a discount?");
DB_CA_BarterParty_Message(4, "I have just the discount for you.");
DB_CA_BarterParty_Message(5, "Welcome. Haggle away.");
//END_REGION

//REGION DEBUG

/*
//Bonus Prints
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedPlayer(_ID, 1, (CHARACTERGUID)_Target)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
CA_Barter_SetHighestBarter()
AND
DB_CA_HighestBarter(_HighestBarter)
AND
DB_CA_BarterBonus(_Player, _BarterBonus)
AND
IntegertoString(_HighestBarter, _HighBarStr)
AND
IntegertoString(_BarterBonus, _BonStr)
AND
StringConcatenate("Highest[",_HighBarStr,_Mgs1)
AND
StringConcatenate("] Bonus[",_BonStr,_Mgs2)
AND
StringConcatenate(_Mgs1,_Mgs2,_Message)
THEN
CharacterStatusText(_Trader, _Message);
*/

//Random
/*
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
Random(3, _Ran)
AND
IntegerMax(_Ran, 2, _MessageNum)
THEN
CA_PrintInt(_Trader, "random(2): ", _Ran, "");
*/

/*
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedPlayer(_ID, 1, (CHARACTERGUID)_Target)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
CharacterGetReservedUserID(_Target,_UID)
AND
CA_Barter_SetHighestBarter()
AND
DB_CA_HighestBarter(_HighestBarter)
AND
IntegertoString(_HighestBarter, _HighBarStr)
AND
IntegertoString(_UID, _IDStr)
AND
StringConcatenate("Highest[",_HighBarStr,_Mgs1)
AND
StringConcatenate("] User ID: ",_IDStr,_Mgs2)
AND
StringConcatenate(_Mgs1,_Mgs2,_Message)
THEN
CharacterStatusText(_Trader, _Message);
*/

//Users

/*
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
DB_UserCounter(_Users)
AND
GetUserCount(_Users2)
AND
IntegertoString(_Users, _UStr)
AND
IntegertoString(_Users2, _UStr2)
AND
StringConcatenate("DB_Users[", _UStr, _Msg1)
AND
StringConcatenate(_Msg1, "]", _Msg2)
AND
StringConcatenate(" Users[", _UStr2, _Msg3)
AND
StringConcatenate("]", _Msg3, _Msg4)
AND
StringConcatenate(_Msg2, _Msg4, _Message)
THEN
CharacterStatusText(_Trader, _Message);
*/


//Region
/*
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
GetRegion(_Trader, _Region)
AND
StringConcatenate("Region: ", _Region, _Message)
THEN
CharacterStatusText(_Trader, _Message);
*/

//Highest Barter
/*
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
DB_CA_HighestBarter(_HighestBarter)
AND
IntegertoString(_HighestBarter, _HighBarStr)
AND
StringConcatenate("Highest Barter: ", _HighBarStr, _Message)
THEN
CharacterStatusText(_Trader, _Message);
*/

/*
IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedPlayer(_ID, 1, (CHARACTERGUID)_Player)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
DB_IsPlayer(_Player)
THEN
CharacterStatusText(_Trader, "You are a player.");

IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedPlayer(_ID, 1, (CHARACTERGUID)_Player)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
NOT DB_IsPlayer(_Player)
THEN
CharacterStatusText(_Trader, "You are not a player.");


IF
DialogStarted((STRING)_Dialog, (INTEGER)_ID)
AND
DialogGetInvolvedPlayer(_ID, 1, (CHARACTERGUID)_Player)
AND
DialogGetInvolvedNPC(_ID, 1, (CHARACTERGUID)_Trader)
AND
DB_IsPlayer(_Player)
AND
DB_UserCounter(_Users)
AND
IntegertoString(_Users, _StrUsers)
AND
StringConcatenate("You're playing with ", _StrUsers, _Msg1)
AND
StringConcatenate(_Msg1, " users", _Msg2)
THEN
CharacterStatusText(_Trader, _Msg2);
*/
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ZZZ_CivilAuras"
