Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_CA_LuckBonus((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000, 0);
DB_CA_SneakBonus((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000, 0);

DB_CA_LuckAuraActive((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000, 0);

DB_CA_Temp_CheckPlayer((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
KBSECTION
//REGION DEBUG
/*
IF
CharacterStatusApplied((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
NOT DB_IsPlayer(_Player)
THEN
DisplayText(_Player, "Not Player");

IF
CharacterStatusApplied((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
DB_IsPlayer(_Player)
THEN
DisplayText(_Player, "Player");

IF
CharacterStatusRemoved((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
NOT DB_IsPlayer(_Player)
THEN
DisplayText(_Player, "Not Player");

IF
CharacterStatusRemoved((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
DB_IsPlayer(_Player)
THEN
DisplayText(_Player, "Player");
*/

IF
CharacterStatusApplied(S_Player_Beast_f25ca124-a4d2-427b-af62-df66df41a978, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
CharacterGetAbility(S_Player_Beast_f25ca124-a4d2-427b-af62-df66df41a978, "Luck", _PlayerLuck)
AND
CharacterGetBaseAbility(_AuraHost, "Luck", _TargetLuck)
AND
IntegerSubtract(_TargetLuck, _PlayerLuck, _Bonus)
AND
IntegertoString(_PlayerLuck, _LuckStr)
AND
IntegertoString(_TargetLuck, _TargetLuckStr)
AND
IntegertoString(_Bonus, _BonusLuckStr)
AND
StringConcatenate("Base: ", _LuckStr, _Out1)
AND
StringConcatenate(" Target: ", _TargetLuckStr, _Out2)
AND
StringConcatenate(" Bonus: ", _BonusLuckStr, _Out3)
AND
StringConcatenate(_Out1, _Out2, _PreFinalMessage1)
AND
StringConcatenate(_PreFinalMessage1, _Out3, _FinalMessage)
THEN
DisplayText(S_Player_Beast_f25ca124-a4d2-427b-af62-df66df41a978, _FinalMessage);
DebugText(S_Player_Beast_f25ca124-a4d2-427b-af62-df66df41a978, _FinalMessage);
//CharacterAddAbility(S_Player_Beast_f25ca124-a4d2-427b-af62-df66df41a978, "Luck", _Bonus);

IF
CharacterStatusRemoved((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
NOT DB_IsPlayer(_Player)
THEN
DisplayText(_Player, "Not Player");

//END_REGION


//REGION LUCK
PROC
CA_ClearLuckTable()
AND
DB_CA_LuckBonus(_Player)
THEN
NOT DB_CA_LuckAuraActive(_Player);

IF
CharacterStatusApplied((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
GetUUID(_Player, _Name)
AND
StringConcatenate("Player: ", _Name, _Message)
THEN
DB_NOOP(1);
//DisplayText(_Player, _Message);

IF
CharacterStatusApplied((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
NOT DB_CA_LuckBonus(_Player)
AND
CharacterGetAbility(_Player, "Luck", _PlayerLuck)
AND
CharacterGetBaseAbility(_AuraHost, "Luck", _TargetLuck)
AND
_PlayerLuck < _TargetLuck
AND
IntegerSubtract(_TargetLuck, _PlayerLuck, _Bonus)
THEN
DB_CA_LuckBonus(_Player, _Bonus);
CharacterAddAbility(_Player, "Luck", _Bonus);

IF
CharacterStatusRemoved((CHARACTERGUID)_Player, "CA_LUCKY", (CHARACTERGUID)_AuraHost)
AND
DB_CA_LuckBonus(_Player, _Bonus)
AND
_Bonus > 0
THEN
CharacterRemoveAbility(_Player, "Luck", _Bonus);
NOT DB_CA_LuckBonus(_Player);

IF
CharacterUsedSkill((CHARACTERGUID)_Player, "Shout_CA_LuckyToggle", _)
AND
HasAppliedStatus(_Player, "CA_LUCKY_AURA", 1)
THEN
DB_CA_LuckAuraActive(_Player, 1);
CharacterStatusText(_Player, "Aura turned on.");

IF
CharacterUsedSkill((CHARACTERGUID)_Player, "Shout_CA_LuckyToggle", _)
AND
HasAppliedStatus(_Player, "CA_LUCKY_AURA", 0)
THEN
DB_CA_LuckAuraActive(_Player, 0);
CharacterStatusText(_Player, "Aura turned off.");

/*
IF
CharacterUsedSkill((CHARACTERGUID)_Player, "Shout_CA_LuckyToggle", _)
TimerLaunch("LuckCheckTimer", 1);
DB_CA_Temp_CheckPlayer(_Player);
DisplayText(_Player, "Hiyaaaaa!");

IF
TimerFinished("LuckCheckTimer")
AND
DB_CA_Temp_CheckPlayer(_Player)
AND
HasAppliedStatus(_Player, "CA_LUCKY_AURA", 1)
THEN
DB_CA_LuckAuraActive(_Player, 1);
CharacterStatusText(_Player, "Aura turned on.");
TimerCancel("LuckCheckTimer");
NOT DB_CA_Temp_CheckPlayer(_Player);

IF
TimerFinished("LuckCheckTimer")
AND
DB_CA_Temp_CheckPlayer(_Player)
AND
HasAppliedStatus(_Player, "CA_LUCKY_AURA", 0)
THEN
DB_CA_LuckAuraActive(_Player, 0);
CA_ClearLuckTable();
CharacterStatusText(_Player, "Aura turned off.");
TimerCancel("LuckCheckTimer");
NOT DB_CA_Temp_CheckPlayer(_Player);
*/

//REGION AUTO-TOGGLE
IF
ObjectEnteredCombat((CHARACTERGUID)_Player, _)
AND
HasActiveStatus(_Player, "CA_LUCKYAURA", 1)
THEN
DB_CA_LuckAuraActive(_Player, 1);
RemoveStatus(_Player, "CA_LUCKYAURA");

IF
ObjectLeftCombat((CHARACTERGUID)_Player, _)
AND
DB_CA_LuckAuraActive(_Player, 1)
AND
HasActiveStatus(_Player, "CA_LUCKYAURA", 0)
THEN
DB_CA_LuckAuraActive(_Player, 1);
ApplyStatus(_Player, "CA_LUCKYAURA", -1.0);

IF
SavegameLoaded(_,_,_,_)
AND
DB_IsPlayer(_Player)
AND
DB_CA_LuckAuraActive(_Player, 1)
THEN
ApplyStatus(_Player, "CA_LUCKYAURA", -1.0);
//END_REGION

//END_REGION
EXITSECTION

ENDEXITSECTION
