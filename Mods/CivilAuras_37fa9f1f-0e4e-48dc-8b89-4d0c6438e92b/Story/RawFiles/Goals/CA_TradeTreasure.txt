Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_CA_Trader_TempInt(0); // Used to store the amount of items needed temporarily.
DB_CA_Trader_TempString("");

//REGION MAIN_TRADERS
//Act 1
DB_CA_ModTraders((CHARACTERGUID)S_FTJ_GhettoBlacksmith_175b32ec-f6a1-4aa1-9028-d02d593f092c); // Fort Joy Blacksmith (Nebora)
//Act 2
DB_CA_ModTraders((CHARACTERGUID)S_GLO_Tarquin_a3d0cdcc-d0b0-464d-9ad7-43b38baed620); // Tarquin
DB_CA_ModTraders((CHARACTERGUID)RC_DW_Trader_PotionsIngredientsWaterSummonNecro_88ea209d-d5e6-465d-bebe-2f10b1fd2861); // Trader Bree
//Act 3
DB_CA_ModTraders((CHARACTERGUID)S_CoS_Temples_Elf_Merchant_001_1f9e87b0-47e4-438d-9930-777cae653edd); //Trayde the Merchant - S_CoS_Temples_Elf_Merchant_001
//ARX
DB_CA_ModTraders((CHARACTERGUID)S_ARX_KemmMansion_ChiefTrader_46ced128-0571-4e0b-ac7b-96279d92072f); //Cat the Appraiser - S_ARX_KemmMansion_ChiefTrader

//END_REGION

//REGION ADDITIONAL_TREASURE_TRADERS
//Act 1
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_FTJ_GhettoBlacksmith_175b32ec-f6a1-4aa1-9028-d02d593f092c, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); // FJ Blacksmith
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_FTJ_GhettoBlacksmith_175b32ec-f6a1-4aa1-9028-d02d593f092c, "MISC_CA_CatBait_90df95ee-2da2-4896-a6c6-abc8def42bc9", 1); // FJ Blacksmith
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_FTJ_SkepticSoldier_9dc4da24-9cd5-43cc-a01c-6923b59bd066, "BOOK_Skill_Warrior_PhoenixDive_5513cf32-5f89-415a-8a02-13c52c579a59", 1); // FJ Lizard Soldier
//Act 2
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_GLO_Tarquin_a3d0cdcc-d0b0-464d-9ad7-43b38baed620, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); // Tarquin
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_RC_DW_TraderFish_81f4cd7e-0c93-4fcb-9aa6-23500e3d2c4d, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); // Trader Thun
//Act 3
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_CoS_Temples_Elf_Merchant_001_1f9e87b0-47e4-438d-9930-777cae653edd, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); //Trayde the Merchant
//ARX
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_ARX_KemmMansion_ChiefTrader_46ced128-0571-4e0b-ac7b-96279d92072f, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); //Cat the Appraiser
//END_REGION

//REGION VENDOR_ITEM_LEVEL_REQUIREMENTS
DB_CA_ItemLevelRequirement("BOOK_Skill_Warrior_PhoenixDive_5513cf32-5f89-415a-8a02-13c52c579a59", 4);
//END_REGION

DB_CA_Trader_SkillBooks("BOOK_Skill_CA_LuckyAura_3413ffc6-ca7a-4e52-917b-b22910db8198", "Shout_CA_LuckyToggle");
DB_CA_Trader_SkillBooks("BOOK_Skill_CA_StealthAura_a1cc5702-b8e9-4b5e-9eeb-68776bd359ff", "Shout_CA_StealthToggle");
DB_CA_Trader_SkillBooks("BOOK_Skill_CA_PepTalk_3a57d09c-fbc1-477d-b5df-7be5301487be", "Target_CA_PepTalk");

DB_CA_Trader_TalentBooks("BOOK_Talent_CA_PetPal_d64f8314-0700-4d43-b854-9b2f73073945", "AnimalEmpathy");

//DB_CA_Trader_TalentTimer(_Template, _Trader, Amount)

//REGION DEBUG
//DB_CA_ModTraders((CHARACTERGUID)Trailer_Humans_Female_Lohse_000_96482956-8428-401a-ab3f-4f5c76963401); //Editor
//DB_CA_AdditionalTradeTreasure((CHARACTERGUID)Trailer_Humans_Female_Lohse_000_96482956-8428-401a-ab3f-4f5c76963401, "BOOK_Skill_Warrior_PhoenixDive_5513cf32-5f89-415a-8a02-13c52c579a59", 1);
//END_REGION
//DB_CA_Trader_PartyAmount(_Item, _Amount);
KBSECTION
//REGION HELPER_METHODS
PROC
CA_PrintIntegerAtTarget((STRING)_MessagePrefix, (STRING)_MessageSuffix, (INTEGER)_Val, (CHARACTERGUID)_Target)
AND
IntegertoString(_Val, _StrVal)
AND
StringConcatenate(_MessagePrefix, _StrVal, _Msg1)
AND
StringConcatenate(_Msg1, _MessageSuffix, _Output)
THEN
//DB_CA_Trader_TempString(_Output);
CharacterStatusText(_Target, _Output);

QRY
CA_QRY_ResetTraderTempInt()
AND
DB_CA_Trader_TempInt(_Val)
THEN
NOT DB_CA_Trader_TempInt(_Val);
DB_CA_Trader_TempInt(0);

PROC
CA_ClearTraderTempInt()
AND
DB_CA_Trader_TempInt(_Val)
THEN
NOT DB_CA_Trader_TempInt(_Val);

PROC
CA_ClearPartyItemAmountsForTemplate((STRING)_Item)
AND
DB_CA_Trader_PartyAmount(_Item, _Val)
THEN
NOT DB_CA_Trader_PartyAmount(_Item, _Val);

PROC
CA_ClearPartyItemAmountsAll()
AND
DB_CA_Trader_PartyAmount(_Item, _Val)
THEN
NOT DB_CA_Trader_PartyAmount(_Item, _Val);

PROC
CA_PROC_ResetTraderTempInt((INTEGER)_ToVal)
THEN
CA_ClearTraderTempInt();
DB_CA_Trader_TempInt(_ToVal);

QRY
CA_GetTotalTalentsLearned((STRING)_Talent)
AND
CA_QRY_ResetTraderTempInt()
AND
DB_IsPlayer(_Player)
AND
CharacterHasTalent(_Player, _Talent, 0)
AND
DB_CA_Trader_TempInt(_Val)
AND
IntegerSum(_Val, 1, _NewVal)
THEN
NOT DB_CA_Trader_TempInt(_Val);
DB_CA_Trader_TempInt(_NewVal);

QRY
CA_GetTotalSkillsLearned((STRING)_Skill)
AND
CA_QRY_ResetTraderTempInt()
AND
DB_IsPlayer(_Player)
AND
CharacterHasSkill(_Player, _Skill, 0)
AND
DB_CA_Trader_TempInt(_Val)
AND
IntegerSum(_Val, 1, _NewVal)
THEN
NOT DB_CA_Trader_TempInt(_Val);
DB_CA_Trader_TempInt(_NewVal);

QRY
CA_QRY_GetTotalItemsInParty((STRING)_Item)
AND
DB_IsPlayer(_Player)
AND
ItemTemplateIsInPartyInventory(_Player, _Item, 0, _Amount)
THEN
CA_ClearPartyItemAmountsForTemplate(_Item);
DB_CA_Trader_PartyAmount(_Item, _Amount);

QRY
CA_Item_PartyLevelRequirement_Met((STRING)_Item)
AND
DB_CA_ItemLevelRequirement(_ItemTemplate, _Level)
AND
_Item != _ItemTemplate
THEN
DB_NOOP(1); // No level requirement

QRY
CA_Item_PartyLevelRequirement_Met((STRING)_Item)
AND
DB_CA_ItemLevelRequirement(_Item, _Level)
AND
DB_IsPlayer(_Player)
AND
CharacterGetLevel(_Player, _PlayerLevel)
AND
_PlayerLevel >= _Level
THEN
DB_NOOP(1); // Level requirement met

//END_REGION

//REGION SKILLBOOK_METHODS
PROC
CA_Trader_GenerateSkillBooks((CHARACTERGUID)_Trader, (STRING)_ItemTemplate, (STRING)_Skill)
AND
CA_QRY_GetTotalItemsInParty(_ItemTemplate)
AND
DB_CA_Trader_PartyAmount(_ItemTemplate, _PartyAmount)
AND
_PartyAmount <= 0
AND
CharacterGetItemTemplateCount(_Trader, _ItemTemplate, _Amount)
AND
CA_QRY_ResetTraderTempInt()
AND
CA_GetTotalSkillsLearned(_Skill)
AND
DB_CA_Trader_TempInt(_Val)
AND
_Val > 0
AND
_Amount < _Val
AND
IntegerSubtract(_Amount, _PartyAmount, _TotalNeeded)
AND
IntegerSubtract(_Val, _TotalNeeded, _TotalAmount)
AND
_TotalAmount > 0
THEN
/*
CA_PrintIntegerAtTarget(_Skill, " book(s) generated.", _TotalAmount, _Trader);
CA_PrintIntegerAtTarget(_Skill, " book(s) needed.", _Val, _Trader);
CA_PrintIntegerAtTarget(_Skill, " book(s) in inventory.", _Amount, _Trader);
*/
ItemTemplateAddTo(_ItemTemplate, _Trader, _TotalAmount);
CA_PROC_ResetTraderTempInt(0);
//END_REGION

//REGION TALENTBOOK_METHODS
PROC
CA_Trader_GenerateTalentBooks((CHARACTERGUID)_Trader, (STRING)_ItemTemplate, (STRING)_Talent)
AND
CA_QRY_GetTotalItemsInParty(_ItemTemplate)
AND
DB_CA_Trader_PartyAmount(_ItemTemplate, _PartyAmount)
AND
_PartyAmount <= 0
AND
CharacterGetItemTemplateCount(_Trader, _ItemTemplate, _Amount)
AND
CA_GetTotalTalentsLearned(_Talent)
AND
DB_CA_Trader_TempInt(_Val)
AND
_Val > 0
AND
_Amount < _Val
AND
IntegerSubtract(_Amount, _PartyAmount, _TotalNeeded)
AND
IntegerSubtract(_Val, _TotalNeeded, _TotalAmount)
AND
_TotalAmount > 0
AND
NOT DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _TotalAmount)
THEN
/*
CA_PrintIntegerAtTarget(_Talent, " book(s) generated.", _TotalAmount, _Trader);
CA_PrintIntegerAtTarget(_Talent, " book(s) needed.", _Val, _Trader);
CA_PrintIntegerAtTarget(_Talent, " book(s) in inventory.", _Amount, _Trader);
*/
//ItemTemplateAddTo(_ItemTemplate, _Trader, _TotalAmount);
CA_PROC_ResetTraderTempInt(0);
DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _TotalAmount);
TimerLaunch(_ItemTemplate, 100);

IF
TimerFinished(_ItemTemplate)
AND
DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _TotalAmount)
AND
_TotalAmount > 0
AND
IntegerSubtract(_TotalAmount, 1, _NewAmount)
THEN
ItemTemplateAddTo(_ItemTemplate, _Trader, 1);
NOT DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _TotalAmount);
DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _NewAmount);

IF
TimerFinished(_ItemTemplate)
AND
DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _TotalAmount)
AND
_TotalAmount <= 0
THEN
NOT DB_CA_Trader_BookGen_Timers(_ItemTemplate, _Trader, _TotalAmount);
TimerCancel(_ItemTemplate);

//END_REGION


//REGION TREASURE_METHODS
PROC
CA_AddSkillBooks((CHARACTERGUID)_Trader)
AND
DB_CA_ModTraders(_Trader)
AND
DB_CA_Trader_SkillBooks(_Item, _Skill)
AND
CA_Item_PartyLevelRequirement_Met(_Item)
THEN
CA_Trader_GenerateSkillBooks(_Trader, _Item, _Skill);

PROC
CA_AddTalentBooks((CHARACTERGUID)_Trader)
AND
DB_CA_ModTraders(_Trader)
AND
DB_CA_Trader_TalentBooks(_Item, _Talent)
AND
CA_Item_PartyLevelRequirement_Met(_Item)
THEN
CA_Trader_GenerateTalentBooks(_Trader, _Item, _Talent);

PROC
CA_AddAdditional((CHARACTERGUID)_Trader)
AND
DB_CA_AdditionalTradeTreasure(_Trader, _ItemTemplate, _Amount)
AND
CA_QRY_GetTotalItemsInParty(_ItemTemplate)
AND
DB_CA_Trader_PartyAmount(_ItemTemplate, _PartyAmount)
AND
_PartyAmount < _Amount
AND
CharacterGetItemTemplateCount(_Trader, _ItemTemplate, 0)
AND
CA_Item_PartyLevelRequirement_Met(_ItemTemplate)
THEN
ItemTemplateAddTo(_ItemTemplate, _Trader, _Amount);
//END_REGION

//REGION GENERATION

IF
RequestTrade(_Player, _Trader)
THEN
CA_AddTalentBooks(_Trader);
CA_AddSkillBooks(_Trader);
CA_AddAdditional(_Trader);

IF
ObjectFlagSet("StartTrade",(CHARACTERGUID)_Player,_Instance)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_Trader)
THEN
CA_AddTalentBooks(_Trader);
CA_AddSkillBooks(_Trader);
CA_AddAdditional(_Trader);

IF
TradeGenerationEnded(_Trader)
THEN
CA_AddTalentBooks(_Trader);
CA_AddSkillBooks(_Trader);
CA_AddAdditional(_Trader);

//END_REGION

//REGION DEBUG
IF
GameStarted("TestLevel", 1)
THEN
DB_CA_ModTraders((CHARACTERGUID)Trailer_Humans_Female_Lohse_000_96482956-8428-401a-ab3f-4f5c76963401);
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)Trailer_Humans_Female_Lohse_000_96482956-8428-401a-ab3f-4f5c76963401, "BOOK_Skill_Warrior_PhoenixDive_5513cf32-5f89-415a-8a02-13c52c579a59", 1);

/*
IF
DialogStarted(_Dialog, _Instance)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_Trader)
AND
DB_CA_ModTraders(_Trader)
AND
DB_CA_Trader_TempInt(_Val)
THEN
CA_PrintIntegerAtTarget("TempInt[","]",_Val,_Trader);
*/

/*
IF
DialogStarted(_Dialog, _Instance)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_Trader)
AND
DB_CA_ModTraders(_Trader)
AND
DB_CA_Trader_SkillBooks(_ItemTemplate, _Skill)
AND
CA_GetTotalSkillsLearned(_Skill)
AND
DB_CA_Trader_TempInt(_Val)
AND
CharacterGetItemTemplateCount(_Trader, _ItemTemplate, _Amount)
AND
StringConcatenate(_Skill, "| ", _Prefix)
THEN
CA_PrintIntegerAtTarget(_Prefix," books in inventory",_Amount,_Trader);
CA_PrintIntegerAtTarget(_Prefix," books needed",_Val,_Trader);
CA_PROC_ResetTraderTempInt(0);

IF
DialogStarted(_Dialog, _Instance)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_Trader)
AND
DB_CA_ModTraders(_Trader)
AND
DB_CA_Trader_TalentBooks(_ItemTemplate, _Ignore)
AND
CharacterGetItemTemplateCount(_Trader, _ItemTemplate, _Amount)
AND
StringConcatenate(_Ignore, "| ", _Prefix)
THEN
//CA_PrintIntegerAtTarget(_Prefix," books in inventory",_Amount,_Trader);
DB_Noop();
*/
//END_REGION

//REGION DATABASE_REFRESH
PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_Trader_TempInt(_Val)
THEN
NOT DB_CA_Trader_TempInt(_Val);

PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_Trader_TempString(_Val)
THEN
NOT DB_CA_Trader_TempString(_Val);

PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_ModTraders(_Val)
THEN
NOT DB_CA_ModTraders(_Val);

PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_AdditionalTradeTreasure(_Merchant, _Item, _Amount)
THEN
NOT DB_CA_AdditionalTradeTreasure(_Merchant, _Item, _Amount);

PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_ItemLevelRequirement(_Item, _Level)
THEN
NOT DB_CA_ItemLevelRequirement(_Item, _Level);

PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_Trader_SkillBooks(_Val1, _Val2)
THEN
NOT DB_CA_Trader_SkillBooks(_Val1, _Val2);

PROC
CA_TradeTreasure_ResetDatabases()
AND
DB_CA_Trader_TalentBooks(_Val1, _Val2)
THEN
NOT DB_CA_Trader_TalentBooks(_Val1, _Val2);

IF
StoryEvent(_Object, "CA_Refresh")
THEN
CA_TradeTreasure_ResetDatabases();
DB_CA_Trader_TempInt(0);
DB_CA_Trader_TempString("");
DB_CA_ModTraders((CHARACTERGUID)S_FTJ_GhettoBlacksmith_175b32ec-f6a1-4aa1-9028-d02d593f092c); // Fort Joy Blacksmith (Nebora)
DB_CA_ModTraders((CHARACTERGUID)S_GLO_Tarquin_a3d0cdcc-d0b0-464d-9ad7-43b38baed620); // Tarquin
DB_CA_ModTraders((CHARACTERGUID)RC_DW_Trader_PotionsIngredientsWaterSummonNecro_88ea209d-d5e6-465d-bebe-2f10b1fd2861); // Trader Bree
DB_CA_ModTraders((CHARACTERGUID)S_CoS_Temples_Elf_Merchant_001_1f9e87b0-47e4-438d-9930-777cae653edd); //Trayde the Merchant - S_CoS_Temples_Elf_Merchant_001
DB_CA_ModTraders((CHARACTERGUID)S_ARX_KemmMansion_ChiefTrader_46ced128-0571-4e0b-ac7b-96279d92072f); //Cat the Appraiser - S_ARX_KemmMansion_ChiefTrader
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_FTJ_GhettoBlacksmith_175b32ec-f6a1-4aa1-9028-d02d593f092c, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); // FJ Blacksmith
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_FTJ_GhettoBlacksmith_175b32ec-f6a1-4aa1-9028-d02d593f092c, "MISC_CA_CatBait_90df95ee-2da2-4896-a6c6-abc8def42bc9", 1); // FJ Blacksmith
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_FTJ_SkepticSoldier_9dc4da24-9cd5-43cc-a01c-6923b59bd066, "BOOK_Skill_Warrior_PhoenixDive_5513cf32-5f89-415a-8a02-13c52c579a59", 1); // FJ Lizard Soldier
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_GLO_Tarquin_a3d0cdcc-d0b0-464d-9ad7-43b38baed620, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); // Tarquin
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_RC_DW_TraderFish_81f4cd7e-0c93-4fcb-9aa6-23500e3d2c4d, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); // Trader Thun
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_CoS_Temples_Elf_Merchant_001_1f9e87b0-47e4-438d-9930-777cae653edd, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); //Trayde the Merchant
DB_CA_AdditionalTradeTreasure((CHARACTERGUID)S_ARX_KemmMansion_ChiefTrader_46ced128-0571-4e0b-ac7b-96279d92072f, "MISC_CA_CatSack_Empty_b67a1a66-718f-4136-afc8-81ad5e64b9f9", 1); //Cat the Appraiser
DB_CA_ItemLevelRequirement("BOOK_Skill_Warrior_PhoenixDive_5513cf32-5f89-415a-8a02-13c52c579a59", 4);
DB_CA_Trader_SkillBooks("BOOK_Skill_CA_LuckyAura_3413ffc6-ca7a-4e52-917b-b22910db8198", "Shout_CA_LuckyToggle");
DB_CA_Trader_SkillBooks("BOOK_Skill_CA_StealthAura_a1cc5702-b8e9-4b5e-9eeb-68776bd359ff", "Shout_CA_StealthToggle");
DB_CA_Trader_SkillBooks("BOOK_Skill_CA_PepTalk_3a57d09c-fbc1-477d-b5df-7be5301487be", "Target_CA_PepTalk");
DB_CA_Trader_TalentBooks("BOOK_Talent_CA_PetPal_d64f8314-0700-4d43-b854-9b2f73073945", "AnimalEmpathy");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ZZZ_CivilAuras"
