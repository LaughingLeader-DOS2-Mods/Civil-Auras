Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION HELPER_METHODS
PROC
CA_PrintMessage((CHARACTERGUID)_Target, (STRING)_Prefix, (STRING)_Var, (STRING)_Suffix)
AND
StringConcatenate(_Prefix, _Var, _Str1)
AND
StringConcatenate(_Str1, _Suffix, _Str2)
THEN
CharacterStatusText(_Target, _Str2);

PROC
CA_PrintInt((CHARACTERGUID)_Target, (STRING)_Prefix, (INTEGER)_VarInt, (STRING)_Suffix)
AND
IntegertoString(_VarInt, _Var)
AND
StringConcatenate(_Prefix, _Var, _Str1)
AND
StringConcatenate(_Str1, _Suffix, _Str2)
THEN
CharacterStatusText(_Target, _Str2);

QRY
CA_Global_UserMatch((CHARACTERGUID)_Player, (CHARACTERGUID)_Character)
AND
CharacterGetReservedUserID(_Player,_PlayerID)
AND
CharacterGetReservedUserID(_Character, _CharID)
AND
_CharID == _PlayerID
THEN
DB_NOOP(1);

QRY
CA_Global_AbilityHigher((CHARACTERGUID)_Player, (CHARACTERGUID)_Target, (STRING)_Ability)
AND
CharacterGetAbility(_Player, _Ability, _Val1)
AND
CharacterGetAbility(_Target, _Ability, _Val2)
AND
_Val1 > _Val2
THEN
DB_NOOP(1);
//END_REGION

//REGION BONUS_POINTS
IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_AddTalentPoint")
THEN
CharacterAddTalentPoint(_Player,1);

IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_AddAbilityPoint")
THEN
CharacterAddAbilityPoint(_Player, 1);

/*
IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_AddCivilPoint")
THEN
CharacterAddCivilAbilityPoint(_Player, 1);
*/

IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_AddAttributePoint")
THEN
CharacterAddAttributePoint(_Player, 1);

IF
StoryEvent((CHARACTERGUID)_Player, "Event_CA_AddSourcePoint")
THEN
CharacterAddSourcePoints(_Player, 1);
//END_REGION

//REGION MOD_UPDATING
PROC
CA_System_UpdateAll()
THEN
CA_Legacy_Start_RemoveOldAuras();
CA_Legacy_RemoveOldData();
//END_REGION

//REGION LEGACY_DATA_REMOVAL
PROC
CA_Legacy_DisplayMessageBox((STRING)_Str)
AND
DB_IsPlayer(_Player)
THEN
OpenMessageBox(_Player, _Str);

PROC
CA_Legacy_RemoveOldData()
AND
SysCount("DB_CA_ModVersion", 1, _Count)
AND
_Count > 0
THEN
SysClear("DB_CA_ModVersion", 1);

PROC
CA_Legacy_Start_RemoveOldAuras()
AND
DB_IsPlayer(_Player)
THEN
CA_Debug_Record(_Player, "[Legacy] Removed old aura data");
CA_Legacy_RemoveOldAuras(_Player);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_CivilAuras"
